1. Log(n) complexity

The log(n) complexity is better than O(n) and is obtained if the algorithm perform the operations in half time every iteration.

Example: Binary Search algorithm

Array: a = [1,3,6,5,13,8]

Problem: To search for a number 6

Solution: First sort

sorted_a = [1,3,5,6,8,13]

Find the middle position of the array and check if it is smaller or greater than the number at that position.


If the number is smaller than required proceed with right part.


This algorithm operates in log(n)


2. O(n^2) complexity

This takes place when there are two for loops.


Example: Sorting an array from smaller to greater using two pointer to indices.


